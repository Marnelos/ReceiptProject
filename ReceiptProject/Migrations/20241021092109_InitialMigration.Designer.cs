// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReceiptProject.Models;

#nullable disable

namespace ReceiptProject.Migrations
{
    [DbContext(typeof(ReceiptDbContext))]
    [Migration("20241021092109_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReceiptProject.Models.CashRegister", b =>
                {
                    b.Property<int>("RegisterId")
                        .HasColumnType("int")
                        .HasColumnName("register_id");

                    b.Property<string>("RegisterDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("register_description");

                    b.HasKey("RegisterId")
                        .HasName("PK__CashRegi__1418262FD182AEF6");

                    b.ToTable("CashRegisters");
                });

            modelBuilder.Entity("ReceiptProject.Models.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .HasColumnType("int")
                        .HasColumnName("emp_id");

                    b.Property<string>("Firstname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("lastname");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("EmpId")
                        .HasName("PK__Employee__1299A861FC1C0943");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ReceiptProject.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("FpaCategory")
                        .HasColumnType("int")
                        .HasColumnName("fpa_category");

                    b.Property<int?>("Inventory")
                        .HasColumnType("int")
                        .HasColumnName("inventory");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.Property<string>("ProdDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("prod_description");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__47027DF5991514F9");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ReceiptProject.Models.Receipt", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("EmpId")
                        .HasColumnType("int")
                        .HasColumnName("emp_id");

                    b.Property<decimal?>("Fpa")
                        .HasColumnType("money")
                        .HasColumnName("fpa");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("money")
                        .HasColumnName("freight");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("payment_type");

                    b.Property<DateTime?>("RecTime")
                        .HasColumnType("datetime")
                        .HasColumnName("rec_time");

                    b.Property<int?>("RegisterId")
                        .HasColumnType("int")
                        .HasColumnName("register_id");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("money")
                        .HasColumnName("total_cost");

                    b.HasKey("OrderId")
                        .HasName("PK__Receipts__46596229B7919EEC");

                    b.HasIndex("EmpId");

                    b.HasIndex("RegisterId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("ReceiptProject.Models.ReceiptLine", b =>
                {
                    b.Property<int>("InstId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("inst_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstId"));

                    b.Property<int?>("Fpa")
                        .HasColumnType("int")
                        .HasColumnName("fpa");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("money")
                        .HasColumnName("freight");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("InstId")
                        .HasName("PK__ReceiptL__0206940D08078E8A");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ReceiptLines");
                });

            modelBuilder.Entity("ReceiptProject.Models.Receipt", b =>
                {
                    b.HasOne("ReceiptProject.Models.Employee", "Emp")
                        .WithMany("Receipts")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("fk_emp");

                    b.HasOne("ReceiptProject.Models.CashRegister", "Register")
                        .WithMany("Receipts")
                        .HasForeignKey("RegisterId")
                        .HasConstraintName("fk_register");

                    b.Navigation("Emp");

                    b.Navigation("Register");
                });

            modelBuilder.Entity("ReceiptProject.Models.ReceiptLine", b =>
                {
                    b.HasOne("ReceiptProject.Models.Receipt", "Order")
                        .WithMany("ReceiptLines")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("fk_order");

                    b.HasOne("ReceiptProject.Models.Product", "Product")
                        .WithMany("ReceiptLines")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_prod");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReceiptProject.Models.CashRegister", b =>
                {
                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("ReceiptProject.Models.Employee", b =>
                {
                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("ReceiptProject.Models.Product", b =>
                {
                    b.Navigation("ReceiptLines");
                });

            modelBuilder.Entity("ReceiptProject.Models.Receipt", b =>
                {
                    b.Navigation("ReceiptLines");
                });
#pragma warning restore 612, 618
        }
    }
}
